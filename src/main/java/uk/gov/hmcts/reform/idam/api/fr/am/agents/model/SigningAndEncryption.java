/*
 * ForgeRock AM Agents API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 5.5.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.gov.hmcts.reform.idam.api.fr.am.agents.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.ClientIDTokenPublicEncryptionKey;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.ClientJWTBearerPublicKey;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.EnableIDTokenEncryption;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.IDTokenEncryptionAlgorithm;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.IDTokenEncryptionMethod;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.IDTokenSigningAlgorithm;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.JWKsURIContentCacheMissCacheTime;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.JWKsURIContentCacheTimeoutInMs;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.JsonWebKey;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.JsonWebKeyURI;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.PublicKeySelector;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.RequestParameterEncryptionAlgorithm;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.RequestParameterEncryptionMethod;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.RequestParameterSigningAlgorithm;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.TokenEndpointAuthenticationSigningAlgorithm;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.UserInfoEncryptedResponseAlgorithm;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.UserInfoEncryptedResponseEncryptionAlgorithm;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.UserInfoResponseFormat_;
import uk.gov.hmcts.reform.idam.api.fr.am.agents.model.UserInfoSignedResponseAlgorithm;

/**
 * SigningAndEncryption
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-21T15:18:22.399Z")
public class SigningAndEncryption {
  @JsonProperty("jwksUri")
  private JsonWebKeyURI jwksUri = null;

  @JsonProperty("jwksCacheTimeout")
  private JWKsURIContentCacheTimeoutInMs jwksCacheTimeout = null;

  @JsonProperty("jwkStoreCacheMissCacheTime")
  private JWKsURIContentCacheMissCacheTime jwkStoreCacheMissCacheTime = null;

  @JsonProperty("tokenEndpointAuthSigningAlgorithm")
  private TokenEndpointAuthenticationSigningAlgorithm tokenEndpointAuthSigningAlgorithm = null;

  @JsonProperty("jwkSet")
  private JsonWebKey jwkSet = null;

  @JsonProperty("idTokenSignedResponseAlg")
  private IDTokenSigningAlgorithm idTokenSignedResponseAlg = null;

  @JsonProperty("idTokenEncryptionEnabled")
  private EnableIDTokenEncryption idTokenEncryptionEnabled = null;

  @JsonProperty("idTokenEncryptionAlgorithm")
  private IDTokenEncryptionAlgorithm idTokenEncryptionAlgorithm = null;

  @JsonProperty("idTokenEncryptionMethod")
  private IDTokenEncryptionMethod idTokenEncryptionMethod = null;

  @JsonProperty("idTokenPublicEncryptionKey")
  private ClientIDTokenPublicEncryptionKey idTokenPublicEncryptionKey = null;

  @JsonProperty("clientJwtPublicKey")
  private ClientJWTBearerPublicKey clientJwtPublicKey = null;

  @JsonProperty("publicKeyLocation")
  private PublicKeySelector publicKeyLocation = null;

  @JsonProperty("userinfoResponseFormat")
  private UserInfoResponseFormat_ userinfoResponseFormat = null;

  @JsonProperty("userinfoSignedResponseAlg")
  private UserInfoSignedResponseAlgorithm userinfoSignedResponseAlg = null;

  @JsonProperty("userinfoEncryptedResponseAlg")
  private UserInfoEncryptedResponseAlgorithm userinfoEncryptedResponseAlg = null;

  @JsonProperty("userinfoEncryptedResponseEncryptionAlgorithm")
  private UserInfoEncryptedResponseEncryptionAlgorithm userinfoEncryptedResponseEncryptionAlgorithm = null;

  @JsonProperty("requestParameterSignedAlg")
  private RequestParameterSigningAlgorithm requestParameterSignedAlg = null;

  @JsonProperty("requestParameterEncryptedAlg")
  private RequestParameterEncryptionAlgorithm requestParameterEncryptedAlg = null;

  @JsonProperty("requestParameterEncryptedEncryptionAlgorithm")
  private RequestParameterEncryptionMethod requestParameterEncryptedEncryptionAlgorithm = null;

  public SigningAndEncryption jwksUri(JsonWebKeyURI jwksUri) {
    this.jwksUri = jwksUri;
    return this;
  }

   /**
   * Get jwksUri
   * @return jwksUri
  **/
  @ApiModelProperty(value = "")
  public JsonWebKeyURI getJwksUri() {
    return jwksUri;
  }

  public void setJwksUri(JsonWebKeyURI jwksUri) {
    this.jwksUri = jwksUri;
  }

  public SigningAndEncryption jwksCacheTimeout(JWKsURIContentCacheTimeoutInMs jwksCacheTimeout) {
    this.jwksCacheTimeout = jwksCacheTimeout;
    return this;
  }

   /**
   * Get jwksCacheTimeout
   * @return jwksCacheTimeout
  **/
  @ApiModelProperty(value = "")
  public JWKsURIContentCacheTimeoutInMs getJwksCacheTimeout() {
    return jwksCacheTimeout;
  }

  public void setJwksCacheTimeout(JWKsURIContentCacheTimeoutInMs jwksCacheTimeout) {
    this.jwksCacheTimeout = jwksCacheTimeout;
  }

  public SigningAndEncryption jwkStoreCacheMissCacheTime(JWKsURIContentCacheMissCacheTime jwkStoreCacheMissCacheTime) {
    this.jwkStoreCacheMissCacheTime = jwkStoreCacheMissCacheTime;
    return this;
  }

   /**
   * Get jwkStoreCacheMissCacheTime
   * @return jwkStoreCacheMissCacheTime
  **/
  @ApiModelProperty(value = "")
  public JWKsURIContentCacheMissCacheTime getJwkStoreCacheMissCacheTime() {
    return jwkStoreCacheMissCacheTime;
  }

  public void setJwkStoreCacheMissCacheTime(JWKsURIContentCacheMissCacheTime jwkStoreCacheMissCacheTime) {
    this.jwkStoreCacheMissCacheTime = jwkStoreCacheMissCacheTime;
  }

  public SigningAndEncryption tokenEndpointAuthSigningAlgorithm(TokenEndpointAuthenticationSigningAlgorithm tokenEndpointAuthSigningAlgorithm) {
    this.tokenEndpointAuthSigningAlgorithm = tokenEndpointAuthSigningAlgorithm;
    return this;
  }

   /**
   * Get tokenEndpointAuthSigningAlgorithm
   * @return tokenEndpointAuthSigningAlgorithm
  **/
  @ApiModelProperty(value = "")
  public TokenEndpointAuthenticationSigningAlgorithm getTokenEndpointAuthSigningAlgorithm() {
    return tokenEndpointAuthSigningAlgorithm;
  }

  public void setTokenEndpointAuthSigningAlgorithm(TokenEndpointAuthenticationSigningAlgorithm tokenEndpointAuthSigningAlgorithm) {
    this.tokenEndpointAuthSigningAlgorithm = tokenEndpointAuthSigningAlgorithm;
  }

  public SigningAndEncryption jwkSet(JsonWebKey jwkSet) {
    this.jwkSet = jwkSet;
    return this;
  }

   /**
   * Get jwkSet
   * @return jwkSet
  **/
  @ApiModelProperty(value = "")
  public JsonWebKey getJwkSet() {
    return jwkSet;
  }

  public void setJwkSet(JsonWebKey jwkSet) {
    this.jwkSet = jwkSet;
  }

  public SigningAndEncryption idTokenSignedResponseAlg(IDTokenSigningAlgorithm idTokenSignedResponseAlg) {
    this.idTokenSignedResponseAlg = idTokenSignedResponseAlg;
    return this;
  }

   /**
   * Get idTokenSignedResponseAlg
   * @return idTokenSignedResponseAlg
  **/
  @ApiModelProperty(value = "")
  public IDTokenSigningAlgorithm getIdTokenSignedResponseAlg() {
    return idTokenSignedResponseAlg;
  }

  public void setIdTokenSignedResponseAlg(IDTokenSigningAlgorithm idTokenSignedResponseAlg) {
    this.idTokenSignedResponseAlg = idTokenSignedResponseAlg;
  }

  public SigningAndEncryption idTokenEncryptionEnabled(EnableIDTokenEncryption idTokenEncryptionEnabled) {
    this.idTokenEncryptionEnabled = idTokenEncryptionEnabled;
    return this;
  }

   /**
   * Get idTokenEncryptionEnabled
   * @return idTokenEncryptionEnabled
  **/
  @ApiModelProperty(value = "")
  public EnableIDTokenEncryption getIdTokenEncryptionEnabled() {
    return idTokenEncryptionEnabled;
  }

  public void setIdTokenEncryptionEnabled(EnableIDTokenEncryption idTokenEncryptionEnabled) {
    this.idTokenEncryptionEnabled = idTokenEncryptionEnabled;
  }

  public SigningAndEncryption idTokenEncryptionAlgorithm(IDTokenEncryptionAlgorithm idTokenEncryptionAlgorithm) {
    this.idTokenEncryptionAlgorithm = idTokenEncryptionAlgorithm;
    return this;
  }

   /**
   * Get idTokenEncryptionAlgorithm
   * @return idTokenEncryptionAlgorithm
  **/
  @ApiModelProperty(value = "")
  public IDTokenEncryptionAlgorithm getIdTokenEncryptionAlgorithm() {
    return idTokenEncryptionAlgorithm;
  }

  public void setIdTokenEncryptionAlgorithm(IDTokenEncryptionAlgorithm idTokenEncryptionAlgorithm) {
    this.idTokenEncryptionAlgorithm = idTokenEncryptionAlgorithm;
  }

  public SigningAndEncryption idTokenEncryptionMethod(IDTokenEncryptionMethod idTokenEncryptionMethod) {
    this.idTokenEncryptionMethod = idTokenEncryptionMethod;
    return this;
  }

   /**
   * Get idTokenEncryptionMethod
   * @return idTokenEncryptionMethod
  **/
  @ApiModelProperty(value = "")
  public IDTokenEncryptionMethod getIdTokenEncryptionMethod() {
    return idTokenEncryptionMethod;
  }

  public void setIdTokenEncryptionMethod(IDTokenEncryptionMethod idTokenEncryptionMethod) {
    this.idTokenEncryptionMethod = idTokenEncryptionMethod;
  }

  public SigningAndEncryption idTokenPublicEncryptionKey(ClientIDTokenPublicEncryptionKey idTokenPublicEncryptionKey) {
    this.idTokenPublicEncryptionKey = idTokenPublicEncryptionKey;
    return this;
  }

   /**
   * Get idTokenPublicEncryptionKey
   * @return idTokenPublicEncryptionKey
  **/
  @ApiModelProperty(value = "")
  public ClientIDTokenPublicEncryptionKey getIdTokenPublicEncryptionKey() {
    return idTokenPublicEncryptionKey;
  }

  public void setIdTokenPublicEncryptionKey(ClientIDTokenPublicEncryptionKey idTokenPublicEncryptionKey) {
    this.idTokenPublicEncryptionKey = idTokenPublicEncryptionKey;
  }

  public SigningAndEncryption clientJwtPublicKey(ClientJWTBearerPublicKey clientJwtPublicKey) {
    this.clientJwtPublicKey = clientJwtPublicKey;
    return this;
  }

   /**
   * Get clientJwtPublicKey
   * @return clientJwtPublicKey
  **/
  @ApiModelProperty(value = "")
  public ClientJWTBearerPublicKey getClientJwtPublicKey() {
    return clientJwtPublicKey;
  }

  public void setClientJwtPublicKey(ClientJWTBearerPublicKey clientJwtPublicKey) {
    this.clientJwtPublicKey = clientJwtPublicKey;
  }

  public SigningAndEncryption publicKeyLocation(PublicKeySelector publicKeyLocation) {
    this.publicKeyLocation = publicKeyLocation;
    return this;
  }

   /**
   * Get publicKeyLocation
   * @return publicKeyLocation
  **/
  @ApiModelProperty(value = "")
  public PublicKeySelector getPublicKeyLocation() {
    return publicKeyLocation;
  }

  public void setPublicKeyLocation(PublicKeySelector publicKeyLocation) {
    this.publicKeyLocation = publicKeyLocation;
  }

  public SigningAndEncryption userinfoResponseFormat(UserInfoResponseFormat_ userinfoResponseFormat) {
    this.userinfoResponseFormat = userinfoResponseFormat;
    return this;
  }

   /**
   * Get userinfoResponseFormat
   * @return userinfoResponseFormat
  **/
  @ApiModelProperty(value = "")
  public UserInfoResponseFormat_ getUserinfoResponseFormat() {
    return userinfoResponseFormat;
  }

  public void setUserinfoResponseFormat(UserInfoResponseFormat_ userinfoResponseFormat) {
    this.userinfoResponseFormat = userinfoResponseFormat;
  }

  public SigningAndEncryption userinfoSignedResponseAlg(UserInfoSignedResponseAlgorithm userinfoSignedResponseAlg) {
    this.userinfoSignedResponseAlg = userinfoSignedResponseAlg;
    return this;
  }

   /**
   * Get userinfoSignedResponseAlg
   * @return userinfoSignedResponseAlg
  **/
  @ApiModelProperty(value = "")
  public UserInfoSignedResponseAlgorithm getUserinfoSignedResponseAlg() {
    return userinfoSignedResponseAlg;
  }

  public void setUserinfoSignedResponseAlg(UserInfoSignedResponseAlgorithm userinfoSignedResponseAlg) {
    this.userinfoSignedResponseAlg = userinfoSignedResponseAlg;
  }

  public SigningAndEncryption userinfoEncryptedResponseAlg(UserInfoEncryptedResponseAlgorithm userinfoEncryptedResponseAlg) {
    this.userinfoEncryptedResponseAlg = userinfoEncryptedResponseAlg;
    return this;
  }

   /**
   * Get userinfoEncryptedResponseAlg
   * @return userinfoEncryptedResponseAlg
  **/
  @ApiModelProperty(value = "")
  public UserInfoEncryptedResponseAlgorithm getUserinfoEncryptedResponseAlg() {
    return userinfoEncryptedResponseAlg;
  }

  public void setUserinfoEncryptedResponseAlg(UserInfoEncryptedResponseAlgorithm userinfoEncryptedResponseAlg) {
    this.userinfoEncryptedResponseAlg = userinfoEncryptedResponseAlg;
  }

  public SigningAndEncryption userinfoEncryptedResponseEncryptionAlgorithm(UserInfoEncryptedResponseEncryptionAlgorithm userinfoEncryptedResponseEncryptionAlgorithm) {
    this.userinfoEncryptedResponseEncryptionAlgorithm = userinfoEncryptedResponseEncryptionAlgorithm;
    return this;
  }

   /**
   * Get userinfoEncryptedResponseEncryptionAlgorithm
   * @return userinfoEncryptedResponseEncryptionAlgorithm
  **/
  @ApiModelProperty(value = "")
  public UserInfoEncryptedResponseEncryptionAlgorithm getUserinfoEncryptedResponseEncryptionAlgorithm() {
    return userinfoEncryptedResponseEncryptionAlgorithm;
  }

  public void setUserinfoEncryptedResponseEncryptionAlgorithm(UserInfoEncryptedResponseEncryptionAlgorithm userinfoEncryptedResponseEncryptionAlgorithm) {
    this.userinfoEncryptedResponseEncryptionAlgorithm = userinfoEncryptedResponseEncryptionAlgorithm;
  }

  public SigningAndEncryption requestParameterSignedAlg(RequestParameterSigningAlgorithm requestParameterSignedAlg) {
    this.requestParameterSignedAlg = requestParameterSignedAlg;
    return this;
  }

   /**
   * Get requestParameterSignedAlg
   * @return requestParameterSignedAlg
  **/
  @ApiModelProperty(value = "")
  public RequestParameterSigningAlgorithm getRequestParameterSignedAlg() {
    return requestParameterSignedAlg;
  }

  public void setRequestParameterSignedAlg(RequestParameterSigningAlgorithm requestParameterSignedAlg) {
    this.requestParameterSignedAlg = requestParameterSignedAlg;
  }

  public SigningAndEncryption requestParameterEncryptedAlg(RequestParameterEncryptionAlgorithm requestParameterEncryptedAlg) {
    this.requestParameterEncryptedAlg = requestParameterEncryptedAlg;
    return this;
  }

   /**
   * Get requestParameterEncryptedAlg
   * @return requestParameterEncryptedAlg
  **/
  @ApiModelProperty(value = "")
  public RequestParameterEncryptionAlgorithm getRequestParameterEncryptedAlg() {
    return requestParameterEncryptedAlg;
  }

  public void setRequestParameterEncryptedAlg(RequestParameterEncryptionAlgorithm requestParameterEncryptedAlg) {
    this.requestParameterEncryptedAlg = requestParameterEncryptedAlg;
  }

  public SigningAndEncryption requestParameterEncryptedEncryptionAlgorithm(RequestParameterEncryptionMethod requestParameterEncryptedEncryptionAlgorithm) {
    this.requestParameterEncryptedEncryptionAlgorithm = requestParameterEncryptedEncryptionAlgorithm;
    return this;
  }

   /**
   * Get requestParameterEncryptedEncryptionAlgorithm
   * @return requestParameterEncryptedEncryptionAlgorithm
  **/
  @ApiModelProperty(value = "")
  public RequestParameterEncryptionMethod getRequestParameterEncryptedEncryptionAlgorithm() {
    return requestParameterEncryptedEncryptionAlgorithm;
  }

  public void setRequestParameterEncryptedEncryptionAlgorithm(RequestParameterEncryptionMethod requestParameterEncryptedEncryptionAlgorithm) {
    this.requestParameterEncryptedEncryptionAlgorithm = requestParameterEncryptedEncryptionAlgorithm;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SigningAndEncryption signingAndEncryption = (SigningAndEncryption) o;
    return Objects.equals(this.jwksUri, signingAndEncryption.jwksUri) &&
        Objects.equals(this.jwksCacheTimeout, signingAndEncryption.jwksCacheTimeout) &&
        Objects.equals(this.jwkStoreCacheMissCacheTime, signingAndEncryption.jwkStoreCacheMissCacheTime) &&
        Objects.equals(this.tokenEndpointAuthSigningAlgorithm, signingAndEncryption.tokenEndpointAuthSigningAlgorithm) &&
        Objects.equals(this.jwkSet, signingAndEncryption.jwkSet) &&
        Objects.equals(this.idTokenSignedResponseAlg, signingAndEncryption.idTokenSignedResponseAlg) &&
        Objects.equals(this.idTokenEncryptionEnabled, signingAndEncryption.idTokenEncryptionEnabled) &&
        Objects.equals(this.idTokenEncryptionAlgorithm, signingAndEncryption.idTokenEncryptionAlgorithm) &&
        Objects.equals(this.idTokenEncryptionMethod, signingAndEncryption.idTokenEncryptionMethod) &&
        Objects.equals(this.idTokenPublicEncryptionKey, signingAndEncryption.idTokenPublicEncryptionKey) &&
        Objects.equals(this.clientJwtPublicKey, signingAndEncryption.clientJwtPublicKey) &&
        Objects.equals(this.publicKeyLocation, signingAndEncryption.publicKeyLocation) &&
        Objects.equals(this.userinfoResponseFormat, signingAndEncryption.userinfoResponseFormat) &&
        Objects.equals(this.userinfoSignedResponseAlg, signingAndEncryption.userinfoSignedResponseAlg) &&
        Objects.equals(this.userinfoEncryptedResponseAlg, signingAndEncryption.userinfoEncryptedResponseAlg) &&
        Objects.equals(this.userinfoEncryptedResponseEncryptionAlgorithm, signingAndEncryption.userinfoEncryptedResponseEncryptionAlgorithm) &&
        Objects.equals(this.requestParameterSignedAlg, signingAndEncryption.requestParameterSignedAlg) &&
        Objects.equals(this.requestParameterEncryptedAlg, signingAndEncryption.requestParameterEncryptedAlg) &&
        Objects.equals(this.requestParameterEncryptedEncryptionAlgorithm, signingAndEncryption.requestParameterEncryptedEncryptionAlgorithm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jwksUri, jwksCacheTimeout, jwkStoreCacheMissCacheTime, tokenEndpointAuthSigningAlgorithm, jwkSet, idTokenSignedResponseAlg, idTokenEncryptionEnabled, idTokenEncryptionAlgorithm, idTokenEncryptionMethod, idTokenPublicEncryptionKey, clientJwtPublicKey, publicKeyLocation, userinfoResponseFormat, userinfoSignedResponseAlg, userinfoEncryptedResponseAlg, userinfoEncryptedResponseEncryptionAlgorithm, requestParameterSignedAlg, requestParameterEncryptedAlg, requestParameterEncryptedEncryptionAlgorithm);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SigningAndEncryption {\n");
    
    sb.append("    jwksUri: ").append(toIndentedString(jwksUri)).append("\n");
    sb.append("    jwksCacheTimeout: ").append(toIndentedString(jwksCacheTimeout)).append("\n");
    sb.append("    jwkStoreCacheMissCacheTime: ").append(toIndentedString(jwkStoreCacheMissCacheTime)).append("\n");
    sb.append("    tokenEndpointAuthSigningAlgorithm: ").append(toIndentedString(tokenEndpointAuthSigningAlgorithm)).append("\n");
    sb.append("    jwkSet: ").append(toIndentedString(jwkSet)).append("\n");
    sb.append("    idTokenSignedResponseAlg: ").append(toIndentedString(idTokenSignedResponseAlg)).append("\n");
    sb.append("    idTokenEncryptionEnabled: ").append(toIndentedString(idTokenEncryptionEnabled)).append("\n");
    sb.append("    idTokenEncryptionAlgorithm: ").append(toIndentedString(idTokenEncryptionAlgorithm)).append("\n");
    sb.append("    idTokenEncryptionMethod: ").append(toIndentedString(idTokenEncryptionMethod)).append("\n");
    sb.append("    idTokenPublicEncryptionKey: ").append(toIndentedString(idTokenPublicEncryptionKey)).append("\n");
    sb.append("    clientJwtPublicKey: ").append(toIndentedString(clientJwtPublicKey)).append("\n");
    sb.append("    publicKeyLocation: ").append(toIndentedString(publicKeyLocation)).append("\n");
    sb.append("    userinfoResponseFormat: ").append(toIndentedString(userinfoResponseFormat)).append("\n");
    sb.append("    userinfoSignedResponseAlg: ").append(toIndentedString(userinfoSignedResponseAlg)).append("\n");
    sb.append("    userinfoEncryptedResponseAlg: ").append(toIndentedString(userinfoEncryptedResponseAlg)).append("\n");
    sb.append("    userinfoEncryptedResponseEncryptionAlgorithm: ").append(toIndentedString(userinfoEncryptedResponseEncryptionAlgorithm)).append("\n");
    sb.append("    requestParameterSignedAlg: ").append(toIndentedString(requestParameterSignedAlg)).append("\n");
    sb.append("    requestParameterEncryptedAlg: ").append(toIndentedString(requestParameterEncryptedAlg)).append("\n");
    sb.append("    requestParameterEncryptedEncryptionAlgorithm: ").append(toIndentedString(requestParameterEncryptedEncryptionAlgorithm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

