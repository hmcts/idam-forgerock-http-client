/*
 * ForgeRock AM OAuth2Client API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 5.5.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.gov.hmcts.reform.idam.api.fr.am.agents.oauth2.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * OAuth2ClientAdvancedOAuth2ClientConfig
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-09T15:43:26.593+01:00")
public class AdvancedOAuth2ClientConfig {
  @JsonProperty("tokenEndpointAuthMethod")
  private StringValue tokenEndpointAuthMethod = null;

  @JsonProperty("sectorIdentifierUri")
  private ObjectValue sectorIdentifierUri = null;

  @JsonProperty("responseTypes")
  private StringArrayValue responseTypes = null;

  @JsonProperty("isConsentImplied")
  private BooleanValue isConsentImplied = null;

  @JsonProperty("contacts")
  private StringArrayValue contacts = null;

  @JsonProperty("subjectType")
  private StringValue subjectType = null;

  @JsonProperty("descriptions")
  private StringArrayValue descriptions = null;

  @JsonProperty("updateAccessToken")
  private ObjectValue updateAccessToken = null;

  @JsonProperty("requestUris")
  private StringArrayValue requestUris = null;

  @JsonProperty("name")
  private StringArrayValue name = null;

  @JsonProperty("mixUpMitigation")
  private BooleanValue mixUpMitigation = null;

  public AdvancedOAuth2ClientConfig tokenEndpointAuthMethod(StringValue tokenEndpointAuthMethod) {
    this.tokenEndpointAuthMethod = tokenEndpointAuthMethod;
    return this;
  }

   /**
   * Get tokenEndpointAuthMethod
   * @return tokenEndpointAuthMethod
  **/
  @ApiModelProperty(value = "")
  public StringValue getTokenEndpointAuthMethod() {
    return tokenEndpointAuthMethod;
  }

  public void setTokenEndpointAuthMethod(StringValue tokenEndpointAuthMethod) {
    this.tokenEndpointAuthMethod = tokenEndpointAuthMethod;
  }

  public AdvancedOAuth2ClientConfig sectorIdentifierUri(ObjectValue sectorIdentifierUri) {
    this.sectorIdentifierUri = sectorIdentifierUri;
    return this;
  }

   /**
   * Get sectorIdentifierUri
   * @return sectorIdentifierUri
  **/
  @ApiModelProperty(value = "")
  public ObjectValue getSectorIdentifierUri() {
    return sectorIdentifierUri;
  }

  public void setSectorIdentifierUri(ObjectValue sectorIdentifierUri) {
    this.sectorIdentifierUri = sectorIdentifierUri;
  }

  public AdvancedOAuth2ClientConfig responseTypes(StringArrayValue responseTypes) {
    this.responseTypes = responseTypes;
    return this;
  }

   /**
   * Get responseTypes
   * @return responseTypes
  **/
  @ApiModelProperty(value = "")
  public StringArrayValue getResponseTypes() {
    return responseTypes;
  }

  public void setResponseTypes(StringArrayValue responseTypes) {
    this.responseTypes = responseTypes;
  }

  public AdvancedOAuth2ClientConfig isConsentImplied(BooleanValue isConsentImplied) {
    this.isConsentImplied = isConsentImplied;
    return this;
  }

   /**
   * Get isConsentImplied
   * @return isConsentImplied
  **/
  @ApiModelProperty(value = "")
  public BooleanValue getIsConsentImplied() {
    return isConsentImplied;
  }

  public void setIsConsentImplied(BooleanValue isConsentImplied) {
    this.isConsentImplied = isConsentImplied;
  }

  public AdvancedOAuth2ClientConfig contacts(StringArrayValue contacts) {
    this.contacts = contacts;
    return this;
  }

   /**
   * Get contacts
   * @return contacts
  **/
  @ApiModelProperty(value = "")
  public StringArrayValue getContacts() {
    return contacts;
  }

  public void setContacts(StringArrayValue contacts) {
    this.contacts = contacts;
  }

  public AdvancedOAuth2ClientConfig subjectType(StringValue subjectType) {
    this.subjectType = subjectType;
    return this;
  }

   /**
   * Get subjectType
   * @return subjectType
  **/
  @ApiModelProperty(value = "")
  public StringValue getSubjectType() {
    return subjectType;
  }

  public void setSubjectType(StringValue subjectType) {
    this.subjectType = subjectType;
  }

  public AdvancedOAuth2ClientConfig descriptions(StringArrayValue descriptions) {
    this.descriptions = descriptions;
    return this;
  }

   /**
   * Get descriptions
   * @return descriptions
  **/
  @ApiModelProperty(value = "")
  public StringArrayValue getDescriptions() {
    return descriptions;
  }

  public void setDescriptions(StringArrayValue descriptions) {
    this.descriptions = descriptions;
  }

  public AdvancedOAuth2ClientConfig updateAccessToken(ObjectValue updateAccessToken) {
    this.updateAccessToken = updateAccessToken;
    return this;
  }

   /**
   * Get updateAccessToken
   * @return updateAccessToken
  **/
  @ApiModelProperty(value = "")
  public ObjectValue getUpdateAccessToken() {
    return updateAccessToken;
  }

  public void setUpdateAccessToken(ObjectValue updateAccessToken) {
    this.updateAccessToken = updateAccessToken;
  }

  public AdvancedOAuth2ClientConfig requestUris(StringArrayValue requestUris) {
    this.requestUris = requestUris;
    return this;
  }

   /**
   * Get requestUris
   * @return requestUris
  **/
  @ApiModelProperty(value = "")
  public StringArrayValue getRequestUris() {
    return requestUris;
  }

  public void setRequestUris(StringArrayValue requestUris) {
    this.requestUris = requestUris;
  }

  public AdvancedOAuth2ClientConfig name(StringArrayValue name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public StringArrayValue getName() {
    return name;
  }

  public void setName(StringArrayValue name) {
    this.name = name;
  }

  public AdvancedOAuth2ClientConfig mixUpMitigation(BooleanValue mixUpMitigation) {
    this.mixUpMitigation = mixUpMitigation;
    return this;
  }

   /**
   * Get mixUpMitigation
   * @return mixUpMitigation
  **/
  @ApiModelProperty(value = "")
  public BooleanValue getMixUpMitigation() {
    return mixUpMitigation;
  }

  public void setMixUpMitigation(BooleanValue mixUpMitigation) {
    this.mixUpMitigation = mixUpMitigation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdvancedOAuth2ClientConfig oauth2ClientAdvancedOAuth2ClientConfig = (AdvancedOAuth2ClientConfig) o;
    return Objects.equals(this.tokenEndpointAuthMethod, oauth2ClientAdvancedOAuth2ClientConfig.tokenEndpointAuthMethod) &&
        Objects.equals(this.sectorIdentifierUri, oauth2ClientAdvancedOAuth2ClientConfig.sectorIdentifierUri) &&
        Objects.equals(this.responseTypes, oauth2ClientAdvancedOAuth2ClientConfig.responseTypes) &&
        Objects.equals(this.isConsentImplied, oauth2ClientAdvancedOAuth2ClientConfig.isConsentImplied) &&
        Objects.equals(this.contacts, oauth2ClientAdvancedOAuth2ClientConfig.contacts) &&
        Objects.equals(this.subjectType, oauth2ClientAdvancedOAuth2ClientConfig.subjectType) &&
        Objects.equals(this.descriptions, oauth2ClientAdvancedOAuth2ClientConfig.descriptions) &&
        Objects.equals(this.updateAccessToken, oauth2ClientAdvancedOAuth2ClientConfig.updateAccessToken) &&
        Objects.equals(this.requestUris, oauth2ClientAdvancedOAuth2ClientConfig.requestUris) &&
        Objects.equals(this.name, oauth2ClientAdvancedOAuth2ClientConfig.name) &&
        Objects.equals(this.mixUpMitigation, oauth2ClientAdvancedOAuth2ClientConfig.mixUpMitigation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tokenEndpointAuthMethod, sectorIdentifierUri, responseTypes, isConsentImplied, contacts, subjectType, descriptions, updateAccessToken, requestUris, name, mixUpMitigation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OAuth2ClientAdvancedOAuth2ClientConfig {\n");

    sb.append("    tokenEndpointAuthMethod: ").append(toIndentedString(tokenEndpointAuthMethod)).append("\n");
    sb.append("    sectorIdentifierUri: ").append(toIndentedString(sectorIdentifierUri)).append("\n");
    sb.append("    responseTypes: ").append(toIndentedString(responseTypes)).append("\n");
    sb.append("    isConsentImplied: ").append(toIndentedString(isConsentImplied)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    subjectType: ").append(toIndentedString(subjectType)).append("\n");
    sb.append("    descriptions: ").append(toIndentedString(descriptions)).append("\n");
    sb.append("    updateAccessToken: ").append(toIndentedString(updateAccessToken)).append("\n");
    sb.append("    requestUris: ").append(toIndentedString(requestUris)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    mixUpMitigation: ").append(toIndentedString(mixUpMitigation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

