/*
 * ForgeRock AM OAuth2Client API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 5.5.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.gov.hmcts.reform.idam.api.fr.am.agents.oauth2.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * OAuth2ClientCoreOAuth2ClientConfig
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-09T15:43:26.593+01:00")
public class CoreOAuth2ClientConfig {
  @JsonProperty("userpassword")
  private String userpassword = null;

  @JsonProperty("agentgroup")
  private Object agentgroup = null;

  @JsonProperty("clientType")
  private ConfigTokenEndpointAuthSigningAlgorithm clientType = null;

  @JsonProperty("defaultScopes")
  private ConfigResponseTypes defaultScopes = null;

  @JsonProperty("clientName")
  private ConfigResponseTypes clientName = null;

  @JsonProperty("status")
  private ConfigTokenEndpointAuthSigningAlgorithm status = null;

  @JsonProperty("redirectionUris")
  private ConfigResponseTypes redirectionUris = null;

  @JsonProperty("accessTokenLifetime")
  private ConfigJwksCacheTimeout accessTokenLifetime = null;

  @JsonProperty("scopes")
  private ConfigResponseTypes scopes = null;

  @JsonProperty("authorizationCodeLifetime")
  private ConfigJwksCacheTimeout authorizationCodeLifetime = null;

  @JsonProperty("refreshTokenLifetime")
  private ConfigJwksCacheTimeout refreshTokenLifetime = null;

  public CoreOAuth2ClientConfig userpassword(String userpassword) {
    this.userpassword = userpassword;
    return this;
  }

   /**
   * Get userpassword
   * @return userpassword
  **/
  @ApiModelProperty(value = "")
  public String getUserpassword() {
    return userpassword;
  }

  public void setUserpassword(String userpassword) {
    this.userpassword = userpassword;
  }

  public CoreOAuth2ClientConfig agentgroup(Object agentgroup) {
    this.agentgroup = agentgroup;
    return this;
  }

   /**
   * Get agentgroup
   * @return agentgroup
  **/
  @ApiModelProperty(value = "")
  public Object getAgentgroup() {
    return agentgroup;
  }

  public void setAgentgroup(Object agentgroup) {
    this.agentgroup = agentgroup;
  }

  public CoreOAuth2ClientConfig clientType(ConfigTokenEndpointAuthSigningAlgorithm clientType) {
    this.clientType = clientType;
    return this;
  }

   /**
   * Get clientType
   * @return clientType
  **/
  @ApiModelProperty(value = "")
  public ConfigTokenEndpointAuthSigningAlgorithm getClientType() {
    return clientType;
  }

  public void setClientType(ConfigTokenEndpointAuthSigningAlgorithm clientType) {
    this.clientType = clientType;
  }

  public CoreOAuth2ClientConfig defaultScopes(ConfigResponseTypes defaultScopes) {
    this.defaultScopes = defaultScopes;
    return this;
  }

   /**
   * Get defaultScopes
   * @return defaultScopes
  **/
  @ApiModelProperty(value = "")
  public ConfigResponseTypes getDefaultScopes() {
    return defaultScopes;
  }

  public void setDefaultScopes(ConfigResponseTypes defaultScopes) {
    this.defaultScopes = defaultScopes;
  }

  public CoreOAuth2ClientConfig clientName(ConfigResponseTypes clientName) {
    this.clientName = clientName;
    return this;
  }

   /**
   * Get clientName
   * @return clientName
  **/
  @ApiModelProperty(value = "")
  public ConfigResponseTypes getClientName() {
    return clientName;
  }

  public void setClientName(ConfigResponseTypes clientName) {
    this.clientName = clientName;
  }

  public CoreOAuth2ClientConfig status(ConfigTokenEndpointAuthSigningAlgorithm status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public ConfigTokenEndpointAuthSigningAlgorithm getStatus() {
    return status;
  }

  public void setStatus(ConfigTokenEndpointAuthSigningAlgorithm status) {
    this.status = status;
  }

  public CoreOAuth2ClientConfig redirectionUris(ConfigResponseTypes redirectionUris) {
    this.redirectionUris = redirectionUris;
    return this;
  }

   /**
   * Get redirectionUris
   * @return redirectionUris
  **/
  @ApiModelProperty(value = "")
  public ConfigResponseTypes getRedirectionUris() {
    return redirectionUris;
  }

  public void setRedirectionUris(ConfigResponseTypes redirectionUris) {
    this.redirectionUris = redirectionUris;
  }

  public CoreOAuth2ClientConfig accessTokenLifetime(ConfigJwksCacheTimeout accessTokenLifetime) {
    this.accessTokenLifetime = accessTokenLifetime;
    return this;
  }

   /**
   * Get accessTokenLifetime
   * @return accessTokenLifetime
  **/
  @ApiModelProperty(value = "")
  public ConfigJwksCacheTimeout getAccessTokenLifetime() {
    return accessTokenLifetime;
  }

  public void setAccessTokenLifetime(ConfigJwksCacheTimeout accessTokenLifetime) {
    this.accessTokenLifetime = accessTokenLifetime;
  }

  public CoreOAuth2ClientConfig scopes(ConfigResponseTypes scopes) {
    this.scopes = scopes;
    return this;
  }

   /**
   * Get scopes
   * @return scopes
  **/
  @ApiModelProperty(value = "")
  public ConfigResponseTypes getScopes() {
    return scopes;
  }

  public void setScopes(ConfigResponseTypes scopes) {
    this.scopes = scopes;
  }

  public CoreOAuth2ClientConfig authorizationCodeLifetime(ConfigJwksCacheTimeout authorizationCodeLifetime) {
    this.authorizationCodeLifetime = authorizationCodeLifetime;
    return this;
  }

   /**
   * Get authorizationCodeLifetime
   * @return authorizationCodeLifetime
  **/
  @ApiModelProperty(value = "")
  public ConfigJwksCacheTimeout getAuthorizationCodeLifetime() {
    return authorizationCodeLifetime;
  }

  public void setAuthorizationCodeLifetime(ConfigJwksCacheTimeout authorizationCodeLifetime) {
    this.authorizationCodeLifetime = authorizationCodeLifetime;
  }

  public CoreOAuth2ClientConfig refreshTokenLifetime(ConfigJwksCacheTimeout refreshTokenLifetime) {
    this.refreshTokenLifetime = refreshTokenLifetime;
    return this;
  }

   /**
   * Get refreshTokenLifetime
   * @return refreshTokenLifetime
  **/
  @ApiModelProperty(value = "")
  public ConfigJwksCacheTimeout getRefreshTokenLifetime() {
    return refreshTokenLifetime;
  }

  public void setRefreshTokenLifetime(ConfigJwksCacheTimeout refreshTokenLifetime) {
    this.refreshTokenLifetime = refreshTokenLifetime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoreOAuth2ClientConfig oauth2ClientCoreOAuth2ClientConfig = (CoreOAuth2ClientConfig) o;
    return Objects.equals(this.userpassword, oauth2ClientCoreOAuth2ClientConfig.userpassword) &&
        Objects.equals(this.agentgroup, oauth2ClientCoreOAuth2ClientConfig.agentgroup) &&
        Objects.equals(this.clientType, oauth2ClientCoreOAuth2ClientConfig.clientType) &&
        Objects.equals(this.defaultScopes, oauth2ClientCoreOAuth2ClientConfig.defaultScopes) &&
        Objects.equals(this.clientName, oauth2ClientCoreOAuth2ClientConfig.clientName) &&
        Objects.equals(this.status, oauth2ClientCoreOAuth2ClientConfig.status) &&
        Objects.equals(this.redirectionUris, oauth2ClientCoreOAuth2ClientConfig.redirectionUris) &&
        Objects.equals(this.accessTokenLifetime, oauth2ClientCoreOAuth2ClientConfig.accessTokenLifetime) &&
        Objects.equals(this.scopes, oauth2ClientCoreOAuth2ClientConfig.scopes) &&
        Objects.equals(this.authorizationCodeLifetime, oauth2ClientCoreOAuth2ClientConfig.authorizationCodeLifetime) &&
        Objects.equals(this.refreshTokenLifetime, oauth2ClientCoreOAuth2ClientConfig.refreshTokenLifetime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userpassword, agentgroup, clientType, defaultScopes, clientName, status, redirectionUris, accessTokenLifetime, scopes, authorizationCodeLifetime, refreshTokenLifetime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OAuth2ClientCoreOAuth2ClientConfig {\n");

    sb.append("    userpassword: ").append(toIndentedString(userpassword)).append("\n");
    sb.append("    agentgroup: ").append(toIndentedString(agentgroup)).append("\n");
    sb.append("    clientType: ").append(toIndentedString(clientType)).append("\n");
    sb.append("    defaultScopes: ").append(toIndentedString(defaultScopes)).append("\n");
    sb.append("    clientName: ").append(toIndentedString(clientName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    redirectionUris: ").append(toIndentedString(redirectionUris)).append("\n");
    sb.append("    accessTokenLifetime: ").append(toIndentedString(accessTokenLifetime)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    authorizationCodeLifetime: ").append(toIndentedString(authorizationCodeLifetime)).append("\n");
    sb.append("    refreshTokenLifetime: ").append(toIndentedString(refreshTokenLifetime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

