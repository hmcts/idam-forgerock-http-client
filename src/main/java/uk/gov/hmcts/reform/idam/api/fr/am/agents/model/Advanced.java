/*
 * ForgeRock AM Agents API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 5.5.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.gov.hmcts.reform.idam.api.fr.am.agents.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Advanced
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-25T13:48:57.857Z")
public class Advanced {
  @JsonProperty("name")
  private DisplayName name = null;

  @JsonProperty("descriptions")
  private DisplayDescription descriptions = null;

  @JsonProperty("requestUris")
  private RequestUris requestUris = null;

  @JsonProperty("responseTypes")
  private ResponseTypes responseTypes = null;

  @JsonProperty("grantTypes")
  private GrantTypes grantTypes = null;

  @JsonProperty("contacts")
  private Contacts contacts = null;

  @JsonProperty("tokenEndpointAuthMethod")
  private TokenEndpointAuthenticationMethod tokenEndpointAuthMethod = null;

  @JsonProperty("sectorIdentifierUri")
  private SectorIdentifierURI sectorIdentifierUri = null;

  @JsonProperty("subjectType")
  private SubjectType subjectType = null;

  @JsonProperty("updateAccessToken")
  private AccessToken updateAccessToken = null;

  @JsonProperty("isConsentImplied")
  private ImpliedConsent isConsentImplied = null;

  @JsonProperty("mixUpMitigation")
  private OAuth20MixUpMitigationEnabled mixUpMitigation = null;

  public Advanced name(DisplayName name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public DisplayName getName() {
    return name;
  }

  public void setName(DisplayName name) {
    this.name = name;
  }

  public Advanced descriptions(DisplayDescription descriptions) {
    this.descriptions = descriptions;
    return this;
  }

   /**
   * Get descriptions
   * @return descriptions
  **/
  @ApiModelProperty(value = "")
  public DisplayDescription getDescriptions() {
    return descriptions;
  }

  public void setDescriptions(DisplayDescription descriptions) {
    this.descriptions = descriptions;
  }

  public Advanced requestUris(RequestUris requestUris) {
    this.requestUris = requestUris;
    return this;
  }

   /**
   * Get requestUris
   * @return requestUris
  **/
  @ApiModelProperty(value = "")
  public RequestUris getRequestUris() {
    return requestUris;
  }

  public void setRequestUris(RequestUris requestUris) {
    this.requestUris = requestUris;
  }

  public Advanced grantTypes(GrantTypes grantTypes) {
    this.grantTypes = grantTypes;
    return this;
  }

   /**
   * Get grantTypes
   * @return grantTypes
  **/
  @ApiModelProperty(value = "")
  public GrantTypes getGrantTypes() {
    return grantTypes;
  }

  public void setGrantTypes(GrantTypes grantTypes) {
    this.grantTypes = grantTypes;
  }

  public Advanced responseTypes(ResponseTypes responseTypes) {
    this.responseTypes = responseTypes;
    return this;
  }

  /**
   * Get responseTypes
   * @return responseTypes
   **/
  @ApiModelProperty(value = "")
  public ResponseTypes getResponseTypes() {
    return responseTypes;
  }

  public void setResponseTypes(ResponseTypes responseTypes) {
    this.responseTypes = responseTypes;
  }

  public Advanced contacts(Contacts contacts) {
    this.contacts = contacts;
    return this;
  }

   /**
   * Get contacts
   * @return contacts
  **/
  @ApiModelProperty(value = "")
  public Contacts getContacts() {
    return contacts;
  }

  public void setContacts(Contacts contacts) {
    this.contacts = contacts;
  }

  public Advanced tokenEndpointAuthMethod(TokenEndpointAuthenticationMethod tokenEndpointAuthMethod) {
    this.tokenEndpointAuthMethod = tokenEndpointAuthMethod;
    return this;
  }

   /**
   * Get tokenEndpointAuthMethod
   * @return tokenEndpointAuthMethod
  **/
  @ApiModelProperty(value = "")
  public TokenEndpointAuthenticationMethod getTokenEndpointAuthMethod() {
    return tokenEndpointAuthMethod;
  }

  public void setTokenEndpointAuthMethod(TokenEndpointAuthenticationMethod tokenEndpointAuthMethod) {
    this.tokenEndpointAuthMethod = tokenEndpointAuthMethod;
  }

  public Advanced sectorIdentifierUri(SectorIdentifierURI sectorIdentifierUri) {
    this.sectorIdentifierUri = sectorIdentifierUri;
    return this;
  }

   /**
   * Get sectorIdentifierUri
   * @return sectorIdentifierUri
  **/
  @ApiModelProperty(value = "")
  public SectorIdentifierURI getSectorIdentifierUri() {
    return sectorIdentifierUri;
  }

  public void setSectorIdentifierUri(SectorIdentifierURI sectorIdentifierUri) {
    this.sectorIdentifierUri = sectorIdentifierUri;
  }

  public Advanced subjectType(SubjectType subjectType) {
    this.subjectType = subjectType;
    return this;
  }

   /**
   * Get subjectType
   * @return subjectType
  **/
  @ApiModelProperty(value = "")
  public SubjectType getSubjectType() {
    return subjectType;
  }

  public void setSubjectType(SubjectType subjectType) {
    this.subjectType = subjectType;
  }

  public Advanced updateAccessToken(AccessToken updateAccessToken) {
    this.updateAccessToken = updateAccessToken;
    return this;
  }

   /**
   * Get updateAccessToken
   * @return updateAccessToken
  **/
  @ApiModelProperty(value = "")
  public AccessToken getUpdateAccessToken() {
    return updateAccessToken;
  }

  public void setUpdateAccessToken(AccessToken updateAccessToken) {
    this.updateAccessToken = updateAccessToken;
  }

  public Advanced isConsentImplied(ImpliedConsent isConsentImplied) {
    this.isConsentImplied = isConsentImplied;
    return this;
  }

   /**
   * Get isConsentImplied
   * @return isConsentImplied
  **/
  @ApiModelProperty(value = "")
  public ImpliedConsent getIsConsentImplied() {
    return isConsentImplied;
  }

  public void setIsConsentImplied(ImpliedConsent isConsentImplied) {
    this.isConsentImplied = isConsentImplied;
  }

  public Advanced mixUpMitigation(OAuth20MixUpMitigationEnabled mixUpMitigation) {
    this.mixUpMitigation = mixUpMitigation;
    return this;
  }

   /**
   * Get mixUpMitigation
   * @return mixUpMitigation
  **/
  @ApiModelProperty(value = "")
  public OAuth20MixUpMitigationEnabled getMixUpMitigation() {
    return mixUpMitigation;
  }

  public void setMixUpMitigation(OAuth20MixUpMitigationEnabled mixUpMitigation) {
    this.mixUpMitigation = mixUpMitigation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Advanced advanced = (Advanced) o;
    return Objects.equals(this.name, advanced.name) &&
        Objects.equals(this.descriptions, advanced.descriptions) &&
        Objects.equals(this.requestUris, advanced.requestUris) &&
        Objects.equals(this.responseTypes, advanced.responseTypes) &&
        Objects.equals(this.contacts, advanced.contacts) &&
        Objects.equals(this.tokenEndpointAuthMethod, advanced.tokenEndpointAuthMethod) &&
        Objects.equals(this.sectorIdentifierUri, advanced.sectorIdentifierUri) &&
        Objects.equals(this.subjectType, advanced.subjectType) &&
        Objects.equals(this.updateAccessToken, advanced.updateAccessToken) &&
        Objects.equals(this.isConsentImplied, advanced.isConsentImplied) &&
        Objects.equals(this.mixUpMitigation, advanced.mixUpMitigation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, descriptions, requestUris, responseTypes, contacts, tokenEndpointAuthMethod, sectorIdentifierUri, subjectType, updateAccessToken, isConsentImplied, mixUpMitigation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Advanced {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    descriptions: ").append(toIndentedString(descriptions)).append("\n");
    sb.append("    requestUris: ").append(toIndentedString(requestUris)).append("\n");
    sb.append("    responseTypes: ").append(toIndentedString(responseTypes)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    tokenEndpointAuthMethod: ").append(toIndentedString(tokenEndpointAuthMethod)).append("\n");
    sb.append("    sectorIdentifierUri: ").append(toIndentedString(sectorIdentifierUri)).append("\n");
    sb.append("    subjectType: ").append(toIndentedString(subjectType)).append("\n");
    sb.append("    updateAccessToken: ").append(toIndentedString(updateAccessToken)).append("\n");
    sb.append("    isConsentImplied: ").append(toIndentedString(isConsentImplied)).append("\n");
    sb.append("    mixUpMitigation: ").append(toIndentedString(mixUpMitigation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

