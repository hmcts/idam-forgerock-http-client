swagger: '2.0'
info:
  version: "1.0"
  title: ForgeRock Roles API
basePath: /openidm
tags:
  - name: Role
  - name: Role - Managed Assignments
  - name: Role - Authorization Role Members
  - name: Role - Role Members
schemes:
  - http
  - https
consumes:
  - application/json
  - text/plain
  - multipart/form-data
produces:
  - application/json
paths:
  /managed/role:
    get:
      summary: Query by Filter or by Query ID
      operationId: queryFilter
      parameters:
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/_queryFilter'
        - $ref: '#/parameters/_queryId'
        - name: _pagedResultsOffset
          in: query
          required: false
          type: string
        - name: _pagedResultsCookie
          in: query
          required: false
          type: string
        - name: _pageSize
          in: query
          required: false
          type: integer
        - name: _totalPagedResultsPolicy
          in: query
          required: false
          type: string
          enum:
            - NONE
        - name: _sortKeys
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RoleQueryResult'
      tags:
        - Role
    post:
      summary: Create with Server-Assigned ID
      operationId: post
      parameters:
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - in: body
          name: requestPayload
          required: true
          schema:
            $ref: '#/definitions/Role'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Role'
          headers:
            Location:
              type: string
              description: Resource location in response to successful create operation.
      tags:
        - Role
  '/managed/role/{roleId}':
    get:
      summary: Read
      operationId: get
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Role'
      tags:
        - Role
    post:
      summary: 'Action: triggerSyncCheck'
      operationId: actionTriggerSyncCheck
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/_action_triggerSyncCheck'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Status'
      tags:
        - Role
    put:
      summary: Update or Create with Client-Assigned ID
      operationId: putIfRevision
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - in: body
          name: requestPayload
          required: true
          schema:
            $ref: '#/definitions/Role'
        - $ref: '#/parameters/If-None-Match-Star'
        - $ref: '#/parameters/If-Match'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Role'
          headers:
            Location:
              type: string
              description: Resource location in response to successful create operation.
      tags:
        - Role
    delete:
      summary: Delete
      operationId: deleteIfMatch
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/If-Match'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Role'
      tags:
        - Role
    patch:
      summary: Update via Patch Operations
      operationId: patchIfMatch
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - in: body
          name: requestPayload
          required: true
          schema:
            $ref: '#/definitions/PatchArray'
        - $ref: '#/parameters/If-Match'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Role'
      tags:
        - Role
  '/managed/role/{roleId}/assignments':
    get:
      summary: Query by Filter or by ID
      operationId: queryFilter
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/_queryFilter'
        - $ref: '#/parameters/_queryId'
        - name: _pagedResultsOffset
          in: query
          required: false
          type: string
        - name: _pagedResultsCookie
          in: query
          required: false
          type: string
        - name: _pageSize
          in: query
          required: false
          type: integer
        - name: _totalPagedResultsPolicy
          in: query
          required: false
          type: string
          enum:
            - NONE
        - name: _sortKeys
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RoleAssignmentsResult'
      tags:
        - Role - Managed Assignments
    post:
      summary: Create with Server-Assigned ID
      operationId: post
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - in: body
          name: requestPayload
          required: true
          schema:
            $ref: '#/definitions/RoleAssignments'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/RoleAssignments'
          headers:
            Location:
              type: string
              description: Resource location in response to successful create operation.
      tags:
        - Role - Managed Assignments
  '/managed/role/{roleId}/assignments/{id}':
    get:
      summary: Read
      operationId: get
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RoleAssignments'
      tags:
        - Role - Managed Assignments
    put:
      summary: Update or Create with Client-Assigned ID
      operationId: putIfRevision
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - in: body
          name: requestPayload
          required: true
          schema:
            $ref: '#/definitions/RoleAssignments'
        - $ref: '#/parameters/If-None-Match-Star'
        - $ref: '#/parameters/If-Match'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/RoleAssignments'
          headers:
            Location:
              type: string
              description: Resource location in response to successful create operation.
      tags:
        - Role - Managed Assignments
    delete:
      summary: Delete
      operationId: deleteIfMatch
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/If-Match'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RoleAssignments'
      tags:
        - Role - Managed Assignments
    patch:
      summary: Update via Patch Operations
      operationId: patchIfMatch
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - in: body
          name: requestPayload
          required: true
          schema:
            $ref: '#/definitions/PatchArray'
        - $ref: '#/parameters/If-Match'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RoleAssignments'
      tags:
        - Role - Managed Assignments
  '/managed/role/{roleId}/authzMembers':
    get:
      summary: Query by Filter or by Query ID
      operationId: queryFilter
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/_queryFilter'
        - $ref: '#/parameters/_queryId'
        - name: _pagedResultsOffset
          in: query
          required: false
          type: string
        - name: _pagedResultsCookie
          in: query
          required: false
          type: string
        - name: _pageSize
          in: query
          required: false
          type: integer
        - name: _totalPagedResultsPolicy
          in: query
          required: false
          type: string
          enum:
            - NONE
        - name: _sortKeys
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RoleAuthzMembersQueryResult'
      tags:
        - Role - Authorization Role Members
    post:
      summary: Create with Server-Assigned ID
      operationId: post
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - in: body
          name: requestPayload
          required: true
          schema:
            $ref: '#/definitions/RoleAuthzMembers'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/RoleAuthzMembers'
          headers:
            Location:
              type: string
              description: Resource location in response to successful create operation.
      tags:
        - Role - Authorization Role Members
  '/managed/role/{roleId}/authzMembers/{id}':
    get:
      summary: Read
      operationId: get
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RoleAuthzMembers'
      tags:
        - Role - Authorization Role Members
    put:
      summary: Update or Create with Client-Assigned ID
      operationId: putIfRevision
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - in: body
          name: requestPayload
          required: true
          schema:
            $ref: '#/definitions/RoleAuthzMembers'
        - $ref: '#/parameters/If-None-Match-Star'
        - $ref: '#/parameters/If-Match'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/RoleAuthzMembers'
          headers:
            Location:
              type: string
              description: Resource location in response to successful create operation.
      tags:
        - Role - Authorization Role Members
    delete:
      summary: Delete
      operationId: deleteIfMatch
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/If-Match'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RoleAuthzMembers'
      tags:
        - Role - Authorization Role Members
    patch:
      summary: Update via Patch Operations
      operationId: patchIfMatch
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - in: body
          name: requestPayload
          required: true
          schema:
            $ref: '#/definitions/PatchArray'
        - $ref: '#/parameters/If-Match'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RoleAuthzMembers'
      tags:
        - Role - Authorization Role Members
  '/managed/role/{roleId}/members':
    get:
      summary: Query by Filter or by Query ID
      operationId: queryFilter
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/_queryFilter'
        - $ref: '#/parameters/_queryId'
        - name: _pagedResultsOffset
          in: query
          required: false
          type: string
        - name: _pagedResultsCookie
          in: query
          required: false
          type: string
        - name: _pageSize
          in: query
          required: false
          type: integer
        - name: _totalPagedResultsPolicy
          in: query
          required: false
          type: string
          enum:
            - NONE
        - name: _sortKeys
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RoleMembersQueryResult'
      tags:
        - Role - Role Members
    post:
      summary: Create with Server-Assigned ID
      operationId: post
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - in: body
          name: requestPayload
          required: true
          schema:
            $ref: '#/definitions/RoleMembers'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/RoleMembers'
          headers:
            Location:
              type: string
              description: Resource location in response to successful create operation.
      tags:
        - Role - Role Members
  '/managed/role/{roleId}/members/{id}':
    get:
      summary: Read
      operationId: get
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RoleMembers'
      tags:
        - Role - Role Members
    put:
      summary: Update or Create with Client-Assigned ID
      operationId: putIfRevision
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - in: body
          name: requestPayload
          required: true
          schema:
            $ref: '#/definitions/RoleMembers'
        - $ref: '#/parameters/If-None-Match-Star'
        - $ref: '#/parameters/If-Match'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/RoleMembers'
          headers:
            Location:
              type: string
              description: Resource location in response to successful create operation.
      tags:
        - Role - Role Members
    delete:
      summary: Delete
      operationId: deleteIfMatch
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/If-Match'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RoleMembers'
      tags:
        - Role - Role Members
    patch:
      summary: Update via Patch Operations
      operationId: patchIfMatch
      parameters:
        - name: roleId
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - $ref: '#/parameters/_fields'
        - $ref: '#/parameters/authorization'
        - in: body
          name: requestPayload
          required: true
          schema:
            $ref: '#/definitions/PatchArray'
        - $ref: '#/parameters/If-Match'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RoleMembers'
      tags:
        - Role - Role Members
definitions:
  'RoleAssignments':
    type: object
    properties:
      _ref:
        type: string
        description: References a relationship from a managed object
      _refProperties:
        type: object
        properties:
          _id:
            type: string
            description: _refProperties object ID
        title: Managed Assignments Items _refProperties
        description: Supports metadata within the relationship
    title: Managed Assignments Items
  'RoleMembersQueryResult':
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/RoleMembers'
        description: Array of matching items
      resultCount:
        type: integer
        format: int32
        default: 0
        description: Count of individual result items
      pagedResultsCookie:
        type: string
        description: Opaque cookie used by the server to keep track of the position in the search results
      totalPagedResultsPolicy:
        type: string
        default: NONE
        description: 'Either NONE, EXACT, or ESTIMATE. Indicates the accuracy of the result count'
      totalPagedResults:
        type: integer
        format: int32
        default: -1
        description: Total count of individual items
      remainingPagedResults:
        type: integer
        format: int32
        default: -1
        description: Count of individual items remaining
    title: Role Members Query Response
  'RoleQueryResult':
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/Role'
        description: Array of matching items
      resultCount:
        type: integer
        format: int32
        default: 0
        description: Count of individual result items
      pagedResultsCookie:
        type: string
        description: Opaque cookie used by the server to keep track of the position in the search results
      totalPagedResultsPolicy:
        type: string
        default: NONE
        description: 'Either NONE, EXACT, or ESTIMATE. Indicates the accuracy of the result count'
      totalPagedResults:
        type: integer
        format: int32
        default: -1
        description: Total count of individual items
      remainingPagedResults:
        type: integer
        format: int32
        default: -1
        description: Count of individual items remaining
    title: Role Query Response
  'RoleAssignmentsResult':
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/RoleAssignments'
        description: Array of matching items
      resultCount:
        type: integer
        format: int32
        default: 0
        description: Count of individual result items
      pagedResultsCookie:
        type: string
        description: Opaque cookie used by the server to keep track of the position in the search results
      totalPagedResultsPolicy:
        type: string
        default: NONE
        description: 'Either NONE, EXACT, or ESTIMATE. Indicates the accuracy of the result count'
      totalPagedResults:
        type: integer
        format: int32
        default: -1
        description: Total count of individual items
      remainingPagedResults:
        type: integer
        format: int32
        default: -1
        description: Count of individual items remaining
    title: Role Assignments Query Response
  'RoleAuthzMembers':
    type: object
    properties:
      _ref:
        type: string
        description: References a relationship from a managed object
      _refProperties:
        type: object
        properties:
          _id:
            type: string
            description: _refProperties object ID
        title: Authorization Role Members Items _refProperties
        description: Supports metadata within the relationship
    title: Authorization Role Members Items
  'RoleAuthzMembersQueryResult':
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/RoleAuthzMembers'
        description: Array of matching items
      resultCount:
        type: integer
        format: int32
        default: 0
        description: Count of individual result items
      pagedResultsCookie:
        type: string
        description: Opaque cookie used by the server to keep track of the position in the search results
      totalPagedResultsPolicy:
        type: string
        default: NONE
        description: 'Either NONE, EXACT, or ESTIMATE. Indicates the accuracy of the result count'
      totalPagedResults:
        type: integer
        format: int32
        default: -1
        description: Total count of individual items
      remainingPagedResults:
        type: integer
        format: int32
        default: -1
        description: Count of individual items remaining
    title: Role Authz Members Query Response
  'RoleMembers':
    type: object
    properties:
      _ref:
        type: string
        description: References a relationship from a managed object
      _refProperties:
        type: object
        properties:
          _id:
            type: string
            description: _refProperties object ID
          _grantType:
            type: string
            description: Grant Type
        title: Role Members Items _refProperties
        description: Supports metadata within the relationship
    title: Role Members Items
  'Role':
    type: object
    required:
      - name
    properties:
      _id:
        type: string
        title: Name
        description: Role ID
      name:
        type: string
        title: Name
        description: 'The role name, used for display purposes.'
      description:
        type: string
        title: Description
        description: 'The role description, used for display purposes.'
      members:
        type: array
        items:
          $ref: '#/definitions/RoleMembers'
        title: Role Members
        description: Role Members
      authzMembers:
        type: array
        items:
          $ref: '#/definitions/RoleAuthzMembers'
        title: Authorization Role Members
        description: Authorization Role Members
      assignments:
        type: array
        items:
          $ref: '#/definitions/RoleAssignments'
        title: Managed Assignments
        description: Managed Assignments
      condition:
        type: string
        title: Condition
        description: A conditional filter for this role
      temporalConstraints:
        type: array
        items:
          type: object
          properties:
            duration:
              type: string
              description: Duration
          title: Temporal Constraints Items
          required:
            - duration
        title: Temporal Constraints
        description: An array of temporal constraints for a role
    title: Role
    description: ''
parameters:
  _queryFilter:
    name: _queryFilter
    in: query
    required: false
    type: string
  _action_triggerSyncCheck:
    name: _action
    in: query
    required: true
    type: string
    enum:
      - triggerSyncCheck
  _action_resetPassword:
    name: _action
    in: query
    required: true
    type: string
    enum:
      - resetPassword
  _queryId:
    name: _queryId
    in: query
    required: false
    type: string
    enum:
      - query-all
      - query-all-ids
  If-None-Match-Star:
    name: If-None-Match
    in: header
    description: Add on PUT Operations when Creating new Entities
    required: false
    type: string
    enum:
      - '*'
  If-Match:
    name: If-Match
    in: header
    description: Add on PUT Operations when Updating Existing Entities
    required: false
    type: string
    enum:
      - '*'
  If-None-Match-Rev:
    name: If-None-Match
    in: header
    description: Add on GET Operations
    required: false
    type: string
  _fields:
    name: _fields
    in: query
    description: Optional parameter containing a comma separated list of field references specifying which fields of the targeted JSON resource should be returned.
    required: false
    type: string
    collectionFormat: csv
  authorization:
    name: Cookie
    in: header
    required: false
    type: string