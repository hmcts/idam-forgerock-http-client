swagger: '2.0'
info:
  title: Forgerock AM Authentication API
  description: An OAuth2 Client for Forgerock AM based on tests
  version: "1.0.0"
schemes:
  - http
  - https
tags:
  - name: OpenID Connect
basePath: /openam
produces:
  - application/json
paths:
  /oauth2/{realm}/authorize:
    get:
      summary: 'OpenID Connect Authorize'
      operationId: get_oauth2_authorize
      parameters:
        - $ref: '#/parameters/sessionCookie'
        - $ref: '#/parameters/pathRealm'
        - name: client_id
          in: query
          required: false
          description: OAuth2 client id of the service initiating the OAuth2 flow.
          type: string
        - name: redirect_uri
          in: query
          required: false
          description: |
            URI to redirect the user to after successful authentication. This URL
            must match one of the registered URLs for the OAuth2 application linked to the service
            initiating the authentication flow.
          type: string
        - name: state
          in: query
          required: false
          description: Optional state to be sent back to the initiating service after successful authentication.
          type: string
        - name: nonce
          in: query
          required: false
          description: Optional parameter required for openid hybrid flow requests.
          type: string
        - name: response_type
          in: query
          required: false
          description: Response type to use for this request
          type: string
          default: code
        - name: scope
          in: query
          required: false
          description: Optional scopes to request.
          type: string
        - name: response_mode
          in: query
          required: false
          description: |
            Informs Authorization server of the mechanism to be used for returning parameters.
            Use is not recommended.
          type: string
        - name: display
          in: query
          required: false
          description: |
            ASCII string value that specifies how the Authorization Server
            displays the authentication and consent user interface pages to the End-User.
          type: string
        - name: prompt
          in: query
          required: false
          description: |
            Space delimited, case sensitive list of ASCII string values that specifies whether
            the Authorization Server prompts the End-User for reauthentication and consent.
          type: string
        - name: max_age
          in: query
          required: false
          description: Maximum Authentication Age
          type: string
        - name: acr_values
          in: query
          required: false
          description: Requested Authentication Context Class Reference values
          type: string
        - name: id_token_hint
          in: query
          required: false
          description: |
            Token previously issued by the Authorization Server being passed as a hint about
            the End-User's current or past authenticated session with the Client.
          type: string
        - name: login_hint
          in: query
          required: false
          description: |
            Hint to the Authorization Server about the login identifier the End-User might use to
            log in (if necessary). This hint can be used by an RP if it first asks the End-User for
            their e-mail address (or other identifier) and then wants to pass that value as a hint
            to the discovered authorization service.
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Response'
      tags:
        - OpenID Connect
      description: Request redirect to login page
    post:
      summary: 'OpenID Connect Authorize'
      operationId: _oauth2_authorize
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/sessionCookie'
        - $ref: '#/parameters/pathRealm'
        - name: client_id
          in: formData
          required: false
          description: OAuth2 client id of the service initiating the OAuth2 flow.
          type: string
        - name: redirect_uri
          in: formData
          required: false
          description: |
            URI to redirect the user to after successful authentication. This URL
            must match one of the registered URLs for the OAuth2 application linked to the service
            initiating the authentication flow.
          type: string
        - name: state
          in: formData
          required: false
          description: Optional state to be sent back to the initiating service after successful authentication.
          type: string
        - name: nonce
          in: formData
          required: false
          description: Optional parameter required for openid hybrid flow requests.
          type: string
        - name: response_type
          in: formData
          required: false
          description: Response type to use for this request
          type: string
          default: code
        - name: scope
          in: formData
          required: false
          description: Optional scopes to request.
          type: string
        - name: response_mode
          in: formData
          required: false
          description: |
            Informs Authorization server of the mechanism to be used for returning parameters.
            Use is not recommended.
          type: string
        - name: display
          in: formData
          required: false
          description: |
            ASCII string value that specifies how the Authorization Server
            displays the authentication and consent user interface pages to the End-User.
          type: string
        - name: prompt
          in: formData
          required: false
          description: |
            Space delimited, case sensitive list of ASCII string values that specifies whether
            the Authorization Server prompts the End-User for reauthentication and consent.
          type: string
        - name: max_age
          in: formData
          required: false
          description: Maximum Authentication Age
          type: string
        - name: acr_values
          in: formData
          required: false
          description: Requested Authentication Context Class Reference values
          type: string
        - name: id_token_hint
          in: formData
          required: false
          description: |
            Token previously issued by the Authorization Server being passed as a hint about
            the End-User's current or past authenticated session with the Client.
          type: string
        - name: login_hint
          in: formData
          required: false
          description: |
            Hint to the Authorization Server about the login identifier the End-User might use to
            log in (if necessary). This hint can be used by an RP if it first asks the End-User for
            their e-mail address (or other identifier) and then wants to pass that value as a hint
            to the discovered authorization service.
          type: string
        - name: decision
          in: formData
          required: false
          type: string
          default: "Allow"
        - name: save_consent
          in: formData
          required: false
          type: string
        - name: csrf
          in: formData
          description: The ID of the token
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Response'
      tags:
        - OpenID Connect
      description: Use token ID to get Authorization code

  /oauth2/connect/jwk_uri:
    get:
      summary: 'Get JWKS'
      operationId: _get_json_web_key_set
      parameters:
        - $ref: '#/parameters/realm'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/JsonWebKeySet'
      tags:
        - OpenID Connect
      description: Retrieves the JSON Web Key Set

  /oauth2/tokeninfo:
    get:
      summary: 'Access Token Info'
      operationId: _get_access_token_info
      parameters:
        - $ref: '#/parameters/authorization'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Response'
        '401':
          schema:
            $ref: '#/definitions/AmApiError'
          description: The supplied credentials where invalid
      tags:
        - OpenID Connect
      description: Returns information about the supplied token

  /oauth2/idtokeninfo:
    post:
      summary: Request ID Token Info
      operationId: _id_token_info
      description: |
        Partner makes a request to the id token info endpoint to get information about
        the token presented
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/realm'
        - $ref: '#/parameters/authorization'
        - name: claims
          in: query
          description: Claims required in the result
          required: false
          type: string
        - name: id_token
          in: formData
          description: The id token
          required: false
          type: string
      tags:
        - OpenID Connect
      responses:
        200:
          description: Authorisation token (Bearer)
          schema:
            $ref: '#/definitions/Response'
        '401':
          schema:
            $ref: '#/definitions/AmApiError'
          description: The supplied credentials where invalid

  /oauth2/access_token:
    post:
      summary: Request Access Token
      operationId: _access_token
      description: |
        Partner makes a request to the token endpoint by adding the
        following parameters describerd  below
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/realm'
        - $ref: '#/parameters/authorization'
        - name: grant_type
          in: formData
          description: The OAuth2 Grant Type
          required: true
          type: string
          enum:
            - authorization_code
            - implicit
            - password
            - refresh_token
            - client_credentials
            - jwt-bearer
        - name: refresh_token
          in: formData
          description: A previously issued refresh token
          required: false
          type: string
        - name: code
          in: formData
          description: The
          required: false
          type: string
        - name: redirect_uri
          in: formData
          description: The
          required: false
          type: string
        - name: client_id
          in: formData
          description: The
          required: false
          type: string
        - name: client_secret
          in: formData
          description: The
          required: false
          type: string
        - name: scope
          in: formData
          description: The
          required: false
          type: string
        - name: username
          in: formData
          description: The
          required: false
          type: string
        - name: password
          in: formData
          description: The
          required: false
          type: string
      tags:
        - OpenID Connect
      responses:
        '200':
          description: Authorisation token
          schema:
            $ref: '#/definitions/AmToken'
          examples:
            application/json: |-
              {
                 "access_token":"2YotnFZFEjr1zCsicMWpAA",
                 "token_type":"Bearer",
                 "expires_in":3600,
               }
        '401':
          schema:
            $ref: '#/definitions/AmApiError'
          description: The supplied credentials where invalid

  /oauth2/{realm}/access_token:
    post:
      summary: Request Access Token For Realm
      operationId: _access_token_for_realm
      description: |
        Partner makes a request to the token endpoint by adding the
        following parameters describerd  below
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/pathRealm'
        - $ref: '#/parameters/authorization'
        - name: grant_type
          in: formData
          description: The OAuth2 Grant Type
          required: true
          type: string
          enum:
            - authorization_code
            - implicit
            - password
            - refresh_token
            - client_credentials
            - jwt-bearer
        - name: refresh_token
          in: formData
          description: A previously issued refresh token
          required: false
          type: string
        - name: code
          in: formData
          description: The
          required: false
          type: string
        - name: redirect_uri
          in: formData
          description: The
          required: false
          type: string
        - name: client_id
          in: formData
          description: The
          required: false
          type: string
        - name: client_secret
          in: formData
          description: The
          required: false
          type: string
        - name: scope
          in: formData
          description: The
          required: false
          type: string
        - name: username
          in: formData
          description: The
          required: false
          type: string
        - name: password
          in: formData
          description: The
          required: false
          type: string
      tags:
        - OpenID Connect
      responses:
        '200':
          description: Authorisation token
          schema:
            $ref: '#/definitions/AmToken'
          examples:
            application/json: |-
              {
                 "access_token":"2YotnFZFEjr1zCsicMWpAA",
                 "token_type":"Bearer",
                 "expires_in":3600,
               }
        '401':
          schema:
            $ref: '#/definitions/AmApiError'
          description: The supplied credentials where invalid

  /oauth2/userinfo:
    post:
      summary: Request Info For User of the Authorization token
      operationId: _user_info
      description: |
        Partner makes a request to the token endpoint by adding the
        following parameters describerd  below
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
          - $ref: '#/parameters/realm'
          - $ref: '#/parameters/authorization'
          - name: claims
            in: formData
            required: false
            type: string
      tags:
        - OpenID Connect
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Response'
        '401':
          schema:
            $ref: '#/definitions/AmApiError'
          description: Indicates that the supplied auth was invalid

  /oauth2/{realm}/userinfo:
    post:
      summary: Request Info For User of the Authorization token
      operationId: _user_info_for_realm
      description: |
        Partner makes a request to the token endpoint by adding the
        following parameters describerd  below
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/pathRealm'
        - name: claims
          in: formData
          required: false
          type: string
      tags:
        - OpenID Connect
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Response'
        '401':
          schema:
            $ref: '#/definitions/AmApiError'
          description: Indicates that the supplied details where incorrect

  /json/authenticate:
    post:
      summary: Request ID Token Info
      operationId: _json_authenticate
      description: |
        Partner makes a request to the id token info endpoint to get information about
        the token presented
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/realm'
        - name: X-OpenAM-Username
          in: header
          description: The Username
          required: true
          type: string
        - name: X-OpenAM-Password
          in: header
          description: The Password
          required: true
          type: string
      tags:
        - OpenID Connect
      responses:
        200:
          description: AM Authorisation token
          schema:
            $ref: '#/definitions/AmAuthenticateToken'

  '/oauth2/{realm}/.well-known/openid-configuration':
    get:
      summary: 'Well Known OpenID Config'
      operationId: _well_known_openid_configuration
      parameters:
        - $ref: '#/parameters/pathRealm'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AmWellKnownConfig'
      tags:
        - OpenID Connect
      description: Returns information required for oidc discovery

  '/oauth2/{realm}/connect/endSession':
    get:
      summary: 'OpenID Connect end_session'
      operationId: _end_session
      parameters:
        - $ref: '#/parameters/pathRealm'
        - name: id_token_hint
          in: query
          required: false
          description: Users id token to help OP link the session
          type: string
        - name: post_logout_redirect_uri
          in: query
          required: false
          description: Optional uri to redirect the user to after logout
          type: string
        - name: state
          in: query
          required: false
          description: Optional application state parameter
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/Response'
      tags:
        - OpenID Connect
      description: Ends the session of the user

  '/oauth2/{realm}/connect/checkSession':
    get:
      summary: 'OpenID Connect check_session_iframe'
      operationId: _check_Session
      parameters:
        - $ref: '#/parameters/pathRealm'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Response'
      tags:
        - OpenID Connect
      description: Returns an iframe that the RP can use to check the session state

definitions:
  AmWellKnownConfig:
    type: object
    title: OpenID Connect Well-Known Configuration Reponse
    properties:
      request_parameter_supported:
        type: boolean
        title: The Request_parameter_supported Schema
        default: false
        examples:
          - true
      claims_parameter_supported:
        type: boolean
        title: The Claims_parameter_supported Schema
        default: false
        examples:
          - false
      introspection_endpoint:
        type: string
        title: The Introspection_endpoint Schema
        examples:
          - http://localhost:8080/openam/oauth2/realms/root/realms/hmcts/introspect
        pattern: "^(.*)$"
      check_session_iframe:
        type: string
        title: The Check_session_iframe Schema
        examples:
          - http://localhost:8080/openam/oauth2/realms/root/realms/hmcts/connect/checkSession
        pattern: "^(.*)$"
      scopes_supported:
        type: array
        title: The Scopes_supported Schema
        items:
          type: string
          examples:
            - acr
            - openid
            - profile
            - roles
            - authorities
            - email
          pattern: "^(.*)$"
      issuer:
        type: string
        title: The Issuer Schema
        examples:
          - http://localhost:8080/openam/oauth2/hmcts
        pattern: "^(.*)$"
      id_token_encryption_enc_values_supported:
        type: array
        title: The Id_token_encryption_enc_values_supported Schema
        items:
          type: string
          title: The Items Schema
          examples:
            - A256GCM
            - A192GCM
            - A128GCM
            - A128CBC-HS256
            - A192CBC-HS384
            - A256CBC-HS512
          pattern: "^(.*)$"
      acr_values_supported:
        type: array
        title: The acr values that are supported
        items:
          type: string
          pattern: "^(.*)$"
      authorization_endpoint:
        type: string
        title: The Authorization_endpoint Schema
        examples:
          - http://localhost:8080/openam/oauth2/realms/root/realms/hmcts/authorize
        pattern: "^(.*)$"
      request_object_encryption_enc_values_supported:
        type: array
        title: The Request_object_encryption_enc_values_supported Schema
        items:
          type: string
          title: The Items Schema
          examples:
            - A256GCM
            - A192GCM
            - A128GCM
            - A128CBC-HS256
            - A192CBC-HS384
            - A256CBC-HS512
          pattern: "^(.*)$"
      rcs_request_encryption_alg_values_supported:
        type: array
        title: The Rcs_request_encryption_alg_values_supported Schema
        items:
          type: string
          title: The Items Schema
          examples:
            - RSA-OAEP
            - RSA-OAEP-256
            - A128KW
            - RSA1_5
            - A256KW
            - dir
            - A192KW
          pattern: "^(.*)$"
      claims_supported:
        type: array
        title: Claims supported by userinfo endpoint
        items:
          type: string
          pattern: "^(.*)$"
      rcs_request_signing_alg_values_supported:
        type: array
        title: The Rcs_request_signing_alg_values_supported Schema
        items:
          type: string
          title: The Items Schema
          examples:
            - ES384
            - HS256
            - HS512
            - ES256
            - RS256
            - HS384
            - ES512
          pattern: "^(.*)$"
      token_endpoint_auth_methods_supported:
        type: array
        title: The Token_endpoint_auth_methods_supported Schema
        items:
          type: string
          title: The Items Schema
          examples:
            - client_secret_post
            - private_key_jwt
            - client_secret_basic
          pattern: "^(.*)$"
      token_endpoint:
        type: string
        title: The Token_endpoint Schema
        examples:
          - http://localhost:8080/openam/oauth2/realms/root/realms/hmcts/access_token
        pattern: "^(.*)$"
      response_types_supported:
        type: array
        title: The Response_types_supported Schema
        items:
          type: string
          title: The Items Schema
          examples:
            - code token id_token
            - code
            - code id_token
            - device_code
            - id_token
            - code token
            - token
            - token id_token
          pattern: "^(.*)$"
      request_uri_parameter_supported:
        type: boolean
        title: The Request_uri_parameter_supported Schema
        default: false
        examples:
          - true
      rcs_response_encryption_enc_values_supported:
        type: array
        title: The Rcs_response_encryption_enc_values_supported Schema
        items:
          type: string
          title: The Items Schema
          examples:
            - A256GCM
            - A192GCM
            - A128GCM
            - A128CBC-HS256
            - A192CBC-HS384
            - A256CBC-HS512
          pattern: "^(.*)$"
      end_session_endpoint:
        type: string
        title: The End_session_endpoint Schema
        default: ''
        examples:
          - http://localhost:8080/openam/oauth2/realms/root/realms/hmcts/connect/endSession
        pattern: "^(.*)$"
      rcs_request_encryption_enc_values_supported:
        type: array
        title: The Rcs_request_encryption_enc_values_supported Schema
        items:
          type: string
          title: The Items Schema
          examples:
            - A256GCM
            - A192GCM
            - A128GCM
            - A128CBC-HS256
            - A192CBC-HS384
            - A256CBC-HS512
          pattern: "^(.*)$"
      version:
        type: string
        title: The Version Schema
        examples:
          - '3.0'
        pattern: "^(.*)$"
      rcs_response_encryption_alg_values_supported:
        type: array
        title: The Rcs_response_encryption_alg_values_supported Schema
        items:
          type: string
          title: The Items Schema
          examples:
            - RSA-OAEP
            - RSA-OAEP-256
            - A128KW
            - A256KW
            - RSA1_5
            - dir
            - A192KW
          pattern: "^(.*)$"
      userinfo_endpoint:
        type: string
        title: The Userinfo_endpoint Schema
        examples:
          - http://localhost:8080/openam/oauth2/realms/root/realms/hmcts/userinfo
        pattern: "^(.*)$"
      id_token_encryption_alg_values_supported:
        type: array
        title: The Id_token_encryption_alg_values_supported Schema
        items:
          type: string
          title: The Items Schema
          examples:
            - RSA-OAEP
            - RSA-OAEP-256
            - A128KW
            - A256KW
            - RSA1_5
            - dir
            - A192KW
          pattern: "^(.*)$"
      jwks_uri:
        type: string
        title: The Jwks_uri Schema
        examples:
          - http://localhost:8080/openam/oauth2/realms/root/realms/hmcts/connect/jwk_uri
        pattern: "^(.*)$"
      subject_types_supported:
        type: array
        title: The Subject_types_supported Schema
        items:
          type: string
          title: The Items Schema
          examples:
            - public
          pattern: "^(.*)$"
      id_token_signing_alg_values_supported:
        type: array
        title: The Id_token_signing_alg_values_supported Schema
        items:
          type: string
          title: The Items Schema
          examples:
            - ES384
            - HS256
            - HS512
            - ES256
            - RS256
            - HS384
            - ES512
          pattern: "^(.*)$"
      registration_endpoint:
        type: string
        title: The Registration_endpoint Schema
        examples:
          - http://localhost:8080/openam/oauth2/realms/root/realms/hmcts/register
        pattern: "^(.*)$"
      request_object_signing_alg_values_supported:
        type: array
        title: The Request_object_signing_alg_values_supported Schema
        items:
          type: string
          title: The Items Schema
          examples:
            - ES384
            - HS256
            - HS512
            - ES256
            - RS256
            - HS384
            - ES512
          pattern: "^(.*)$"
      request_object_encryption_alg_values_supported:
        type: array
        title: The Request_object_encryption_alg_values_supported Schema
        items:
          type: string
          title: The Items Schema
          examples:
            - RSA-OAEP
            - RSA-OAEP-256
            - A128KW
            - RSA1_5
            - A256KW
            - dir
            - A192KW
          pattern: "^(.*)$"
      rcs_response_signing_alg_values_supported:
        type: array
        title: The Rcs_response_signing_alg_values_supported Schema
        items:
          type: string
          title: The Items Schema
          examples:
            - ES384
            - HS256
            - HS512
            - ES256
            - RS256
            - HS384
            - ES512
          pattern: "^(.*)$"

  AmAuthenticateToken:
    type: object
    properties:
      tokenId:
        type: string
        description: IPlanetDirectoryPro Token
      successUrl:
        type: string
        description: Success redirect url
      realm:
        type: string
        description: Realm authenicated against

  AmApiError:
    type: object
    properties:
      error_description:
        type: string
        description: A detailed explanation of the error
      error:
        type: string
        description: The reason for the error

  AmToken:
    type: object
    properties:
      code:
        type: string
        description: The access code
      access_token:
        type: string
        description: The access token
      refresh_token:
        type: string
        description: The refresh token
      scope:
        type: string
        description: The scopes of the token
      id_token:
        type: string
        description: The ID Token
      token_type:
        type: string
        description: The type of token eg "Bearer"
      expires_in:
        type: string
        description: The lifetime in seconds of the access token

  JsonWebKeySet:
    type: object
    properties:
      keys:
        type: array
        items:
          $ref: '#/definitions/JsonWebKey'

  JsonWebKey:
    type: object
    properties:
      alg:
        type: string
      kty:
        type: string
      use:
        type: string
      kid:
        type: string
      n:
        type: string
      e:
        type: string
      x5c:
        type: string
      x5t:
        type: string
      crv:
        type: string
      d:
        type: string
      dp:
        type: string
      dq:
        type: string
      k:
        type: string
      p:
        type: string
      q:
        type: string
      qi:
        type: string
      x:
        type: string
      y:
        type: string

parameters:
  realm:
    name: realm
    in: query
    required: false
    type: string
  pathRealm:
    name: realm
    in: path
    required: true
    type: string
  authorization:
    name: Authorization
    in: header
    required: true
    type: string
  sessionCookie:
    name: Cookie
    in: header
    required: false
    type: string